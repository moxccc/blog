<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>(一)初试nginx</title>
    <link href="/2023/04/24/%E5%88%9D%E8%AF%95nginx/"/>
    <url>/2023/04/24/%E5%88%9D%E8%AF%95nginx/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note note-success">            <p>作为一年的前端程序员，到现在都没有一台自己的服务器，感觉有点拉跨，所以最近忍痛割爱，耗费巨资买了一台阿里云的一年服务器,虽然买了，但是不知道能用服务器干嘛，我想这不能让他闲着的原则，我就搞起了Linux和nginx在上面测试</p><p>Linux不用我多说，程序员必备技能， nginx呢是目前最火的服务器不用我多说，所以在这些因素下我就开始了痛苦的学习之旅</p>          </div><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h3><div class="note note-success">            <blockquote><p>我购买的阿里云服务器配置： 2核(vCPU)2 GiB  Ubuntu 22.04 64位</p></blockquote><ul><li><p>安装使用工具 ：<br>Xshell 7 +  Xftp 7     <span class="label label-info"><a href="https://www.netsarang.com/en/xshell/">Xshell官网</a></span></p></li><li><p>连接你的账户 ：<br>在xshell下载安装完成后，打开xshell 登录你的账号，用户名一般默认root 密码则是你在阿里云服务器控制台重置的密码</p></li></ul>          </div><h3 id="2-开始使用"><a href="#2-开始使用" class="headerlink" title="2.开始使用"></a>2.开始使用</h3><div class="note note-info">            <ul><li><p><strong>检查是否有更新</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs linux">apt update<br></code></pre></td></tr></table></figure></li><li><p><strong>更新安装包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs linux">apt upgrade<br></code></pre></td></tr></table></figure></li><li><p><strong>安装nginx</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs linux">apt install nginx<br></code></pre></td></tr></table></figure></li><li><p><strong>nginx常用命令</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx</span> -s stop        //立即停止服务<br><br>nginx -s quit        //优雅退出(等待进程全部结束)<br><br>nginx -s reload      //热重载<br><br>ps aux | grep nginx  //查看nginx进程<br><br></code></pre></td></tr></table></figure></li><li><p><strong>nginx常用目录</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx">/etc/nginx/nginx.<span class="hljs-attribute">conf</span>      //配置文件目录<br><br>/usr/share/nginx/html      //网页文件目录<br><br></code></pre></td></tr></table></figure></li></ul>          </div><h3 id="3-应用最新的安装包"><a href="#3-应用最新的安装包" class="headerlink" title="3.应用最新的安装包"></a>3.应用最新的安装包</h3><div class="note note-info">            <ul><li><strong>nginx配置key</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs linux">wget https://nginx.org/keys/nginx_signing.key<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs linux">sudo apt-key add nginx_signing.key<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs linux">sudo sh -c &quot;echo &#x27;deb http://nginx.org/packages/mainline/ubuntu/ `lsb_release -cs` nginx&#x27; &gt; /etc/apt/sources.list.d/Nginx.list&quot;<br></code></pre></td></tr></table></figure><ul><li><strong>nginx更新</strong><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> apt-get update        //立即停止服务<br><br>sudo apt-get install nginx        //优雅退出(等待进程全部结束)<br><br>nginx -s reload      //热重载<br><br>ps aux | grep nginx  //查看nginx进程<br><br></code></pre></td></tr></table></figure></li></ul>          </div><h3 id="4-踩坑专区"><a href="#4-踩坑专区" class="headerlink" title="4.踩坑专区"></a>4.踩坑专区</h3><div class="note note-warning">            <ul><li><p><strong>修改 <code>/usr/share/nginx/html</code> 目录下的 <code>index.html</code> 不生效</strong></p><p> 在 <code>/etc/nginx/conf.d</code>  目录下新建一个 <span class="label label-info">你需要访问的网址</span>.conf  &#x2F;&#x2F; 例如 ： <a href="http://www.moxccc.com/">www.moxccc.com</a>  &#x3D;&gt; moxccc.conf 并进行如下配置</p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span>  moxccc.com www.moxccc.com frp.moxccc.com; //这里写你需要访问网址的<span class="hljs-attribute">url</span> 有多个则用空格隔开<br><br>    charset utf-<span class="hljs-number">8</span>;<br><br>    <span class="hljs-comment">#如果是80端口则301转向到https</span><br>    <span class="hljs-attribute">if</span> (<span class="hljs-variable">$server_port</span> = <span class="hljs-number">80</span> ) &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://<span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span>;<br>    &#125;<br><br>    <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">root</span>   html;<br>        <span class="hljs-attribute">index</span>  index.html index.htm;<br>    &#125;<br>    <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>    <span class="hljs-section">location</span> = /50x.html &#123;<br>        <span class="hljs-attribute">root</span>   html;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul>          </div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://blog.dreamogi.com/posts/lets-encrypt-linux/">Linux下使用Let’s Encrypt配置Nginx SSL证书</a></p>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux+nginx 使用教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue3+vite+ts 常见问题汇总</title>
    <link href="/2023/04/20/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <url>/2023/04/20/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>  为什么写这样一篇文章呢，说到底是被折磨的受不了了，每次创建项目，东西还没怎么写就这报错那报错，烦的一批。所以呢趁着有时间赶紧把这些问题都给它集中起来，以后遇到直接看就行了，不用东搜西搜浪费时间！</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="1-VsCode-写方法出现-event-gt"><a href="#1-VsCode-写方法出现-event-gt" class="headerlink" title="1. VsCode 写方法出现  @event=&gt;"></a>1. VsCode 写方法出现  <code>@event=&gt;</code></h3><p> 在 Vue 中的点击事件 @click 后会自动补全一段“ <code>$event =&gt;</code> ”，这是 VSCode 中setting.json未设置好的缘故</p><p> <img src="/../img/blogimg/4-20/4-20-1.png"><br><em><strong>解决方案</strong></em></p><blockquote><p>点击设置-扩展-Inlay Hints: Event Argument In Inline Handlers 把他的勾选取消即可</p></blockquote><h3 id="2-vue文件引入正确-却出现红色错误波浪线"><a href="#2-vue文件引入正确-却出现红色错误波浪线" class="headerlink" title="2. vue文件引入正确 却出现红色错误波浪线"></a>2. vue文件引入正确 却出现红色错误波浪线</h3><p>在 Vue 文件中，引入外部文件不管你正确不正确都会出现红色的波浪线，产生这个问题的原因是我们使用了ts语法，他只能识别.ts文件，并不能识别.vue文件，所以在引入组件的时候报错了</p><p><img src="/../img/blogimg/4-20/4-20-2.png"></p><p><em><strong>解决方案</strong></em></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//在 vite-env.d.ts 添加如下代码</span><br><br>declare <span class="hljs-variable language_">module</span> <span class="hljs-string">&quot;*.vue&quot;</span> &#123;<br>    <span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">App</span>, defineComponent &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">component</span>: <span class="hljs-title class_">ReturnType</span>&lt;<span class="hljs-keyword">typeof</span> defineComponent&gt; &amp; &#123;<br>        <span class="hljs-title function_">install</span>(<span class="hljs-attr">app</span>: <span class="hljs-title class_">App</span>): <span class="hljs-keyword">void</span>;<br>    &#125;;<br>    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> component;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-vue文件引入-“-store-“-出现红色波浪线"><a href="#2-vue文件引入-“-store-“-出现红色波浪线" class="headerlink" title="2. vue文件引入 “ @/store “ 出现红色波浪线"></a>2. vue文件引入 “ <code>@/store</code> “ 出现红色波浪线</h3><p>找不到模块“@&#x2F;…”或其相应的类型声明</p><p><em><strong>解决方案</strong></em></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//在 tsconfig.json 中添加配置</span><br><span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;./&quot;</span>,<span class="hljs-comment">// 解析非相对模块的基础地址，默认是当前目录</span><br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>    <span class="hljs-comment">// 路径映射，相对于baseUrl</span><br>      <span class="hljs-string">&quot;@/*&quot;</span>:[<span class="hljs-string">&quot;src/*&quot;</span>]<br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>问题汇总</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3 使用ArcoDesign</title>
    <link href="/2023/04/18/vue3-ArcoDesign/"/>
    <url>/2023/04/18/vue3-ArcoDesign/</url>
    
    <content type="html"><![CDATA[<!-- Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues). --><h2 id="关于-ArcoDesign"><a href="#关于-ArcoDesign" class="headerlink" title="关于 ArcoDesign"></a>关于 ArcoDesign</h2><p><a href="https://arco.design/vue/docs/start">ArcoDesign</a> 是基于字节跳动公司内部的 Byte Design 升级而来，在打磨了近 3 年之后，通过字节内部大量业务沉淀和验证在前两天由掘金举办的《稀土开发者大会2021》上开源了，这不仅仅是一款 UI 组件库，而是一个能力全面的企业级产品设计系统。</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install --save-dev @arco-design/web-vue<br></code></pre></td></tr></table></figure><h3 id="在main-js内引入"><a href="#在main-js内引入" class="headerlink" title="在main.js内引入"></a>在main.js内引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ArcoVue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@arco-design/web-vue&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span>;<br><span class="hljs-comment">//完整引入css -不推荐</span><br><span class="hljs-comment">// import &#x27;@arco-design/web-vue/dist/arco.css&#x27;;</span><br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ArcoVue</span>); <span class="hljs-comment">//将acro挂载到vue上</span><br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="按需加载（模板）"><a href="#按需加载（模板）" class="headerlink" title="按需加载（模板）"></a>按需加载（模板）</h3><blockquote><p>安装所需插件      npm install -D unplugin-vue-components unplugin-auto-import</p></blockquote><p>安装完成，对 <strong>vite.config.ts</strong> 文件进行配置 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">AutoImport</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-auto-import/vite&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Components</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/vite&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ArcoResolver</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/resolvers&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title function_">vue</span>(),<br>    <span class="hljs-title class_">AutoImport</span>(&#123;<br>      <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">ArcoResolver</span>()],<br>    &#125;),<br>    <span class="hljs-title class_">Components</span>(&#123;<br>      <span class="hljs-attr">resolvers</span>: [<br>        <span class="hljs-title class_">ArcoResolver</span>(&#123;<br>          <span class="hljs-attr">sideEffect</span>: <span class="hljs-literal">true</span><br>        &#125;)<br>      ]<br>    &#125;)<br>  ]<br>&#125;);<br><br></code></pre></td></tr></table></figure><h3 id="按需加载（样式）"><a href="#按需加载（样式）" class="headerlink" title="按需加载（样式）"></a>按需加载（样式）</h3><blockquote><p>安装所需插件      npm install vite-plugin-style-import –save-dev</p></blockquote><p>安装完成，对 <strong>vite.config.ts</strong> 文件进行配置 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span><br><br><br><span class="hljs-comment">// 自动导入vue中hook reactive ref等</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">AutoImport</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;unplugin-auto-import/vite&quot;</span><br><span class="hljs-comment">//自动导入ui-组件 比如说ant-design-vue  element-plus等</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Components</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/vite&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ArcoResolver</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/resolvers&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; createStyleImportPlugin &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite-plugin-style-import&#x27;</span><br><br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title function_">vue</span>(),<br>    <span class="hljs-title class_">AutoImport</span>(&#123;<br>      <span class="hljs-comment">//安装两行后你会发现在组件中不用再导入ref，reactive等</span><br>      <span class="hljs-attr">imports</span>: [<span class="hljs-string">&#x27;vue&#x27;</span>, <span class="hljs-string">&#x27;vue-router&#x27;</span>],<br>      <span class="hljs-comment">//存放的位置</span><br>      <span class="hljs-attr">dts</span>: <span class="hljs-string">&quot;src/auto-import.d.ts&quot;</span>,<br>      <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">ArcoResolver</span>()],<br>    &#125;),<br>    <span class="hljs-title class_">Components</span>(&#123;<br>      <span class="hljs-comment">// 引入组件的,包括自定义组件</span><br>      <span class="hljs-comment">// 存放的位置</span><br>      <span class="hljs-attr">dts</span>: <span class="hljs-string">&quot;src/components.d.ts&quot;</span>,<br>      <span class="hljs-attr">resolvers</span>: [<br>        <span class="hljs-title class_">ArcoResolver</span>(&#123;<br>          <span class="hljs-attr">sideEffect</span>: <span class="hljs-literal">true</span><br>        &#125;)<br>      ]<br>    &#125;),<br>    <span class="hljs-title function_">createStyleImportPlugin</span>(&#123;<br>      <span class="hljs-attr">libs</span>: [<br>        &#123;<br>          <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#x27;@arco-design/web-vue&#x27;</span>,<br>          <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,<br>          <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// css</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">`@arco-design/web-vue/es/<span class="hljs-subst">$&#123;name&#125;</span>/style/css.js`</span><br>            <span class="hljs-comment">// less</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">`@arco-design/web-vue/es/<span class="hljs-subst">$&#123;name&#125;</span>/style/index.js`</span><br>          &#125;,<br>        &#125;<br>      ]<br>    &#125;)<br>  ],<br>&#125;)<br></code></pre></td></tr></table></figure><blockquote><p>若报 Cannot find module ‘consola’ 这个错误<br>可在控制台输入  npm i consola -D 安装对应插件即可</p></blockquote><p>完成以上步骤 就可以正常使用AcroDesign ui库了 </p><p>vue3+vite+ts+router+pinia+axios <a href="https://blog.csdn.net/weixin_59916662/article/details/127331094?spm=1001.2014.3001.5506">一把梭推荐文章</a></p>]]></content>
    
    
    <categories>
      
      <category>Vue3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
